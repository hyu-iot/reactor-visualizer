[{"/home/yunsang/workspace/visualizer/git/reactor-visualizer/client/src/index.js":"1","/home/yunsang/workspace/visualizer/git/reactor-visualizer/client/src/App.js":"2","/home/yunsang/workspace/visualizer/git/reactor-visualizer/client/src/reportWebVitals.js":"3","/home/yunsang/workspace/visualizer/git/reactor-visualizer/client/src/components/Graph/index.js":"4"},{"size":500,"mtime":1649416840487,"results":"5","hashOfConfig":"6"},{"size":2712,"mtime":1649417107499,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1649416840487,"results":"8","hashOfConfig":"6"},{"size":1881,"mtime":1649417086569,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nmwhz2",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/yunsang/workspace/visualizer/git/reactor-visualizer/client/src/index.js",[],[],"/home/yunsang/workspace/visualizer/git/reactor-visualizer/client/src/App.js",["23","24","25"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Graphviz } from \"graphviz-react\";\nimport { Graph } from \"./components/Graph\";\nimport { io } from \"socket.io-client\";\n\nimport './App.css';\n\n\n\n\nfunction App() {\n  const [dots, setdots] = useState([]);\n  const [idx, setidx] = useState(-1);\n  const [socket, setSocket] = useState(null);\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [cdot, setcdot] = useState(null);\n\n\n\n  useEffect(() => {\n    setSocket(io('http://localhost:8080', {\n      cors:{origin: \"*\"}\n    }));\n\n  }, []);\n\n  useEffect(() => {\n    if(!socket) return;\n\n    socket.on('connect', () => {\n      console.log(\"socket connected\");\n      setSocketConnected(true);\n    });\n\n    socket.on('disconnected', () => {\n      console.log(\"socket disconnected\");\n      setSocketConnected(false);\n    });\n\n\n\n\n  }, [socket]);\n  \n\n  useEffect(() => {\n    if(!socket) return;\n\n    socket.on('dotInfoUpdate', (msg) => {\n\n      var {logicalTime, newdot} = msg; \n  \n      console.log(logicalTime);\n      console.log(newdot);\n      setcdot(newdot);\n      setidx(idx + 1);\n      \n      //setdots([...dots, {logicalTime, newdot}])\n      //console.log(dots);\n\n  });\n\n  });\n\n  const handleSocketConnection = () => {\n    if (socketConnected)\n        socket.disconnect();\n    else\n        socket.connect();\n  };\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"title\">Visualization of Precedence Graph</div>\n      <div>\n        <b>Connection status: </b> {socketConnected ? \"Connected\" : \"Disconnected\"}\n      </div>\n      <div className=\"buttons\">\n        <button onClick={handleSocketConnection}>{socketConnected ? 'Disconnect' : 'Connect'}</button>\n      </div>\n\n      \n      <div>{idx + 1}<b>/</b>{dots.length}</div>\n\n      <div className=\"times\">\n        {dots.length > 0  && (<div><b>Logical Time: </b> {dots[idx].logicalTime }</div>)}\n      </div>\n      <div className=\"Graph\">\n        {cdot}\n        {<Graph dot={cdot}/>}\n      </div>\n\n    </div>\n\n  );\n}\n\nexport default App;\n\n// {idx >= 0 && JSON.stringify(dots[idx].dot) }\n\n// {idx >= 0 && <Graphviz \n//  dot={JSON.stringify(dots[idx].dot).replace(/\\\\\"/g,'').replace(/\\\\n/g,'').replace(/[\\/\\\\]/g,'_').replace(/\\[/g,'_').replace(/\\]/g,'').replace(/\\*/gi, '')}\n// />}\n\n// JSON.stringify(dots[idx].dot).replace(/\\\\\"/g,'').replace(/\\\\n/g,'').replace(/[\\/\\\\]/g,'_').replace(/\\[/g,'_').replace(/\\]/g,'').replace(/\\\"/gi,'')\n\n//       <div className=\"Graph\">\n// {idx >= 0 && JSON.stringify(dots[idx].dot) }\n// {idx >= 0 && <Graph\n//     dot={JSON.stringify(dots[idx].dot).replace(/\\\\\"/g,'').replace(/\\\\n/g,'').replace(/[\\/\\\\]/g,'_').replace(/\\[/g,'_').replace(/\\]/g,'').replace(/\\\"/gi,'')} />}\n// </div>","/home/yunsang/workspace/visualizer/git/reactor-visualizer/client/src/reportWebVitals.js",[],[],"/home/yunsang/workspace/visualizer/git/reactor-visualizer/client/src/components/Graph/index.js",[],[],{"ruleId":"26","severity":1,"message":"27","line":1,"column":8,"nodeType":"28","messageId":"29","endLine":1,"endColumn":13},{"ruleId":"26","severity":1,"message":"30","line":3,"column":10,"nodeType":"28","messageId":"29","endLine":3,"endColumn":18},{"ruleId":"26","severity":1,"message":"31","line":13,"column":16,"nodeType":"28","messageId":"29","endLine":13,"endColumn":23},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Graphviz' is defined but never used.","'setdots' is assigned a value but never used."]